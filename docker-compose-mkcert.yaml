# docker-compose.yml
#
# Usage:
#   export PORT=
#   export CLOUD_RUN_SERVICE_NAME=
#   export DATABASE_CLIENT=mongo
#   export DATABASE_HOST=mongo
#   export DATABASE_PORT=27017
#   export DATABASE_NAME=strapi
#   export DATABASE_USERNAME=strapi
#   export DATABASE_PASSWORD=strapi
#   export MONGO_INITDB_DATABASE=strapi
#   export MONGO_INITDB_ROOT_USERNAME=strapi
#   export MONGO_INITDB_ROOT_PASSWORD=strapi
# What can you do with this?
# Create and start all configured services with docker-compose up.
# Build your container images for local use with docker-compose build.

version: '3.7'

services:
  #Nginx
  nginx:
    image: nginx:latest
    container_name: strapi-nginx
    env_file: .env
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - strapi_network
    volumes: # üí°
      - ./webserver/nginx/default.conf:/etc/nginx/conf.d/default.conf‚ö†Ô∏è
      - ./mkcert/certs:/etc/nginx/certs
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    user: ${CURRENT_UID}
    depends_on:
      - mkcert
      
  # MKCert
  mkcert:
    build:
        context: ./mkcert
        dockerfile: Dockerfile
    image: mkcert:local
    container_name: strapi-mkcert
    env_file: .env
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
    networks:
      - strapi_network
    volumes:
      - ./mkcert/certs:/root/.local/share/mkcert

networks:
  strapi_network:
    driver: bridge
    name: strapi_network

volumes:
  strapi-data: